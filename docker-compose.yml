version: '3.8'

services:
  postgres:
    image: postgres:11
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"

  wiremock:
    image: wiremock/wiremock
    volumes:
      - ../src/test/wiremock:/home/wiremock
    command: --async-response-enabled=true
    ports:
      - "9999:8080"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

#  kafka:
#    image: moeenz/docker-kafka-kraft:latest
#    restart: always
#    ports:
#      - "9093:9093"
#    environment:
#      - KRAFT_CONTAINER_HOST_NAME=kafka
#      - KRAFT_CREATE_TOPICS=topic-a,topic-b,topic-c,loanApproved
#      - KRAFT_PARTITIONS_PER_TOPIC=3

#  kafka:
#    image: confluentinc/cp-kafka:latest
#    depends_on:
#      - zookeeper
#    ports:
#      - "29092:29092"
#      - "9092:9092"
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

#  kafka:
#    image: docker.io/bitnami/kafka:3.5
#    ports:
#      - "9092:9092"
#    volumes:
#      - "kafka_data:/bitnami"
#    environment:
#      # KRaft settings
#      - KAFKA_CFG_NODE_ID=0
#      - KAFKA_CFG_PROCESS_ROLES=controller,broker
#      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
#      # Listeners
#      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
#      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
#      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
#      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
#      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
#volumes:
#  kafka_data:
#    driver: local
