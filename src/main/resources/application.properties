logging.level.victor=DEBUG
logging.level.p6spy=DEBUG

#### DB Setup
## DB-H2) use a standalone H2 DB intance (run StartDatabase) and simulate network delay talking to a remote DB
spring.datasource.url = jdbc:h2:tcp://localhost:9092/~/test
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=sa

## DB-PG) use PostgreSQL in a Docker container
# DB-PG-ToxiProxy) Go through a toxiproxy adding 3ms DB latency? to any database interaction to emulate remote connections
#spring.datasource.url=jdbc:postgresql://localhost:55432/postgres

# DB-PG-Delay) Direct connection to DB
#spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
#   but then simulate DB Latency via Hibernate Interceptor
spring.jpa.properties.hibernate.session_factory.session_scoped_interceptor=victor.training.performance.profiling.util.SimulateNetworkDelayHibernateInterceptor

#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.username=postgres
#spring.datasource.password=postgres


#spring.cloud.openfeign.client.config.loan-comments.url=http://localhost:9999

# tell Hibernate to create the tables
spring.jpa.hibernate.ddl-auto=create

# expose metrics
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true

# expose tomcat metrics
server.tomcat.mbeanregistry.enabled=true

# send multiple INSERTs at once as a batch to optimize initial data insert
spring.jpa.properties.hibernate.jdbc.batch_size = 100

# JDBC Connection Pool size
#spring.datasource.hikari.maximum-pool-size=25

# Acquiring the DB connection only at the first DB access, not when entering a @Transactional method: https://vladmihalcea.com/why-you-should-always-use-hibernate-connection-provider_disables_autocommit-for-resource-local-jpa-transactions/
#spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true

# By default, Spring releases the JDBC Connection from the thread, only after the HTTP response is sent back (to allow lazy-loading while marshalling JSON)
#spring.jpa.open-in-view=false